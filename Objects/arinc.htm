<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\arinc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\arinc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon May 06 11:23:51 2024
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; PORT_Init
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3e]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[b]">MIL_STD_1553B2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MIL_STD_1553B2_IRQHandler</a><BR>
 <LI><a href="#[c]">MIL_STD_1553B1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">MIL_STD_1553B1_IRQHandler</a><BR>
 <LI><a href="#[d]">USB_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">USB_IRQHandler</a><BR>
 <LI><a href="#[e]">CAN1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">CAN1_IRQHandler</a><BR>
 <LI><a href="#[f]">CAN2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">CAN2_IRQHandler</a><BR>
 <LI><a href="#[10]">DMA_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">DMA_IRQHandler</a><BR>
 <LI><a href="#[11]">UART1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">UART1_IRQHandler</a><BR>
 <LI><a href="#[12]">UART2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">UART2_IRQHandler</a><BR>
 <LI><a href="#[13]">SSP1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">SSP1_IRQHandler</a><BR>
 <LI><a href="#[14]">BUSY_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BUSY_IRQHandler</a><BR>
 <LI><a href="#[16]">POWER_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">POWER_IRQHandler</a><BR>
 <LI><a href="#[17]">WWDG_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">WWDG_IRQHandler</a><BR>
 <LI><a href="#[18]">Timer4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">Timer4_IRQHandler</a><BR>
 <LI><a href="#[19]">Timer1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">Timer1_IRQHandler</a><BR>
 <LI><a href="#[1a]">Timer2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">Timer2_IRQHandler</a><BR>
 <LI><a href="#[1b]">Timer3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">Timer3_IRQHandler</a><BR>
 <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[1d]">ETHERNET_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ETHERNET_IRQHandler</a><BR>
 <LI><a href="#[1e]">SSP3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">SSP3_IRQHandler</a><BR>
 <LI><a href="#[1f]">SSP2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">SSP2_IRQHandler</a><BR>
 <LI><a href="#[20]">ARINC429T_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ARINC429T_IRQHandler</a><BR>
 <LI><a href="#[21]">KEYPAD_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">KEYPAD_IRQHandler</a><BR>
 <LI><a href="#[22]">LED_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">LED_IRQHandler</a><BR>
 <LI><a href="#[23]">UART3_UART4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">UART3_UART4_IRQHandler</a><BR>
 <LI><a href="#[24]">AudioCodec_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">AudioCodec_IRQHandler</a><BR>
 <LI><a href="#[25]">ETHERNET2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ETHERNET2_IRQHandler</a><BR>
 <LI><a href="#[26]">BKP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">BKP_IRQHandler</a><BR>
 <LI><a href="#[27]">EXT_INT1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">EXT_INT1_IRQHandler</a><BR>
 <LI><a href="#[28]">EXT_INT2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">EXT_INT2_IRQHandler</a><BR>
 <LI><a href="#[29]">EXT_INT3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">EXT_INT3_IRQHandler</a><BR>
 <LI><a href="#[2a]">EXT_INT4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">EXT_INT4_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[15]">ARINC429R_IRQHandler</a> from main.o(i.ARINC429R_IRQHandler) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[20]">ARINC429T_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[24]">AudioCodec_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[26]">BKP_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[14]">BUSY_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[e]">CAN1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[f]">CAN2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[10]">DMA_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[25]">ETHERNET2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[1d]">ETHERNET_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[27]">EXT_INT1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[28]">EXT_INT2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[29]">EXT_INT3_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[2a]">EXT_INT4_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[21]">KEYPAD_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[22]">LED_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[c]">MIL_STD_1553B1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[b]">MIL_STD_1553B2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[16]">POWER_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[13]">SSP1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[1f]">SSP2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[1e]">SSP3_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_mdr1986ve3.o(i.SystemInit) referenced from startup_mdr1986ve3.o(.text)
 <LI><a href="#[19]">Timer1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[1a]">Timer2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[1b]">Timer3_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[18]">Timer4_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[11]">UART1_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[12]">UART2_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[23]">UART3_UART4_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[d]">USB_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[17]">WWDG_IRQHandler</a> from startup_mdr1986ve3.o(.text) referenced from startup_mdr1986ve3.o(RESET)
 <LI><a href="#[2d]">__main</a> from __main.o(!!!main) referenced from startup_mdr1986ve3.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[64]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[65]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[66]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[67]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[68]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[69]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[70]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[73]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[74]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[75]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[76]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[77]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[78]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[7b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[2f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[81]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[32]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[34]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[82]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[36]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[39]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[84]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>MIL_STD_1553B2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIL_STD_1553B2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIL_STD_1553B2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>MIL_STD_1553B1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIL_STD_1553B1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIL_STD_1553B1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USB_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CAN1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CAN2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SSP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>BUSY_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUSY_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUSY_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>POWER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Timer4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Timer1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>Timer2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>Timer3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ETHERNET_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SSP3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SSP2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ARINC429T_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>KEYPAD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYPAD_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYPAD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LED_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UART3_UART4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_UART4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_UART4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>AudioCodec_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioCodec_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioCodec_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ETHERNET2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>BKP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXT_INT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EXT_INT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXT_INT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXT_INT4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_INT4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mdr1986ve3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[38]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[8d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>ARINC429R_BRG_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_BRG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>ARINC429R_ChannelCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_ChannelCmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>ARINC429R_ChannelInit</STRONG> (Thumb, 336 bytes, Stack size 36 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_ChannelInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ARINC429R_ChannelInit &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>ARINC429R_DeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>ARINC429R_GetFlagStatus</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ARINC429R_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_IRQHandler
</UL>

<P><STRONG><a name="[15]"></a>ARINC429R_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.ARINC429R_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ARINC429R_IRQHandler &rArr; ARINC429R_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_serial
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_SetChannel
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_ReceiveData
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ARINC429R_ITConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>ARINC429R_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>ARINC429R_SetChannel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdr32f9qx_arinc429r.o(i.ARINC429R_SetChannel))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>ARINC429T_BRG_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mdr32f9qx_arinc429t.o(i.ARINC429T_BRG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>ARINC429T_ChannelCmd</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mdr32f9qx_arinc429t.o(i.ARINC429T_ChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ARINC429T_ChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>ARINC429T_ChannelInit</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, mdr32f9qx_arinc429t.o(i.ARINC429T_ChannelInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ARINC429T_ChannelInit
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>ARINC429T_DeInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mdr32f9qx_arinc429t.o(i.ARINC429T_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>ARINC429T_SendData</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mdr32f9qx_arinc429t.o(i.ARINC429T_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>EEPROM_SetLatency</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdr32f9qx_eeprom.o(i.EEPROM_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>PORT_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mdr32f9qx_port.o(i.PORT_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>PORT_Init</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, mdr32f9qx_port.o(i.PORT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>RST_CLK_CPU_PLLcmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLcmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>RST_CLK_CPU_PLLconfig</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_CPU_PLLconfig
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>RST_CLK_CPU_PLLstatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_CPU_PLLstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>RST_CLK_CPU_PLLuse</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPU_PLLuse))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>RST_CLK_CPUclkPrescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>RST_CLK_CPUclkSelection</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_CPUclkSelection))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>RST_CLK_GetFlagStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
</UL>

<P><STRONG><a name="[4d]"></a>RST_CLK_HSEconfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_HSEconfig))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>RST_CLK_HSEstatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_HSEstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_HSEstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>RST_CLK_PCLK2cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_PCLK2cmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>RST_CLK_PCLKcmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32f9qx_rst_clk.o(i.RST_CLK_PCLKcmd))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, system_mdr1986ve3.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_mdr1986ve3.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mdr1986ve3.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mdr32f9qx_arinc429r.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_ChannelInit
</UL>

<P><STRONG><a name="[37]"></a>main</STRONG> (Thumb, 340 bytes, Stack size 88 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLK2cmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEconfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkPrescaler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLuse
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLconfig
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLcmd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_DeInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SetLatency
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_SendData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_DeInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_ChannelInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_ChannelCmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429T_BRG_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_ITConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_DeInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_ChannelInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_ChannelCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_BRG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[45]"></a>put_serial</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lib_linear_buffer.o(i.put_serial))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = put_serial
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINC429R_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>serial_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lib_linear_buffer.o(i.serial_init))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3f]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
